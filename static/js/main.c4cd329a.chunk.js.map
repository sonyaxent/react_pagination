{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","pages","currentPageItems","map","slice","DISABLED","first","second","className","cn","disabled","href","onClick","page","handlePageChanging","type","item","options","App","useState","selectedPage","setSelectedPage","itemsPerPage","setItemsPerPage","firstItemOnThePage","lastItemOnPage","id","onChange","event","target","value","toString","option","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCIIG,EAA8B,SAAC,GAErC,IADLC,EACI,EADJA,MAAOC,EACH,EADGA,QAASC,EACZ,EADYA,YAAaC,EACzB,EADyBA,aAEvBC,EAAqBC,KAAKC,KAAKN,EAAQC,GACvCM,EAAkBd,EAAW,EAAGW,GAGhCI,EAFQf,EAAW,EAAGO,GACzBS,KAAI,SAAAZ,GAAC,qBAAYA,MACWa,OAC5BR,EAAc,GAAKD,EAASC,EAAcD,GAqBvCU,EAAW,CACfC,MAAuB,IAAhBV,EACPW,OAAQX,IAAgBE,GAG1B,OACE,qCACE,qBAAIU,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CAAEC,SAAUL,EAASC,QAFvB,SAKE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACLC,QA7Bc,WAClBhB,EAAc,GAChBC,EAAaD,EAAc,IA4BrB,gBAAeS,EAASC,MAL1B,oBAUDL,EAAME,KAAI,SAACU,GAAD,OACT,oBAAeL,UAAS,oBAAeZ,IAAgBiB,EAAO,SAAW,IAAzE,SACE,mBACE,UAAQ,WACRL,UAAU,YACVG,KAAI,WAAME,GACVD,QAAS,kBA/CM,SAACC,GACtBA,IAASjB,GACXC,EAAagB,GA6CUC,CAAmBD,IAClCE,KAAK,SALP,SAOGF,KARIA,MAYX,oBAAIL,UAAWC,IACb,YACA,CAAEC,SAAUL,EAASE,SAFvB,SAKE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACLC,QAnDc,WAClBhB,EAAcE,GAChBD,EAAaD,EAAc,IAkDrB,gBAAeS,EAASE,OAL1B,uBAWJ,6BACGL,EAAiBC,KAAI,SAACa,GAAD,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YCxFbC,EAAU,CAAC,EAAG,EAAG,GAAI,IAEdC,EAAgB,WAC3B,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAwCF,mBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAOMC,GAAuBJ,EAAe,GAAKE,EAAgB,EAC3DG,EAAiBL,EAAeE,EAdpB,GAedF,EAAeE,EAfD,GAkBlB,OACE,sBAAKd,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWY,EADX,mBACkCI,EADlC,cAC0DC,EAD1D,eAtBc,GAsBd,OAIA,sBAAKjB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRkB,GAAG,kBACHlB,UAAU,eACVmB,SAxBiB,SAACC,GAC1BL,GAAiBK,EAAMC,OAAOC,OAC9BT,EAAgB,IAuBRS,MAAOR,EAAaS,WALtB,SAOGd,EAAQd,KAAI,SAAC6B,GAAD,OACX,wBAAqBF,MAAOE,EAA5B,SACGA,GADUA,UAOnB,uBAAOC,QAAQ,kBAAkBzB,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACEd,MAhDY,GAiDZC,QAAS2B,EACT1B,YAAawB,EACbvB,aAAcwB,QCpDtBa,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c4cd329a.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import cn from 'classnames';\nimport React from 'react';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total, perPage, currentPage, onPageChange,\n}) => {\n  const totalPages: number = Math.ceil(total / perPage);\n  const pages: number[] = getNumbers(1, totalPages);\n  const items = getNumbers(1, total)\n    .map(n => `Item ${n}`);\n  const currentPageItems = items.slice(\n    (currentPage - 1) * perPage, currentPage * perPage,\n  );\n\n  const handlePageChanging = (page: number) => {\n    if (page !== currentPage) {\n      onPageChange(page);\n    }\n  };\n\n  const handlePrevClick = () => {\n    if (currentPage > 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handleNextClick = () => {\n    if (currentPage < totalPages) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  const DISABLED = {\n    first: currentPage === 1,\n    second: currentPage === totalPages,\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={cn(\n          'page-item',\n          { disabled: DISABLED.first },\n        )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            onClick={handlePrevClick}\n            aria-disabled={DISABLED.first}\n          >\n            «\n          </a>\n        </li>\n        {pages.map((page) => (\n          <li key={page} className={`page-item ${currentPage === page ? 'active' : ''}`}>\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => handlePageChanging(page)}\n              type=\"button\"\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n        <li className={cn(\n          'page-item',\n          { disabled: DISABLED.second },\n        )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            onClick={handleNextClick}\n            aria-disabled={DISABLED.second}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {currentPageItems.map((item) => (\n          <li key={item} data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\n\nconst TOTAL_ITEMS = 42;\n\nconst options = [3, 5, 10, 20];\n\nexport const App: React.FC = () => {\n  const [selectedPage, setSelectedPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n\n  const handleItemsPerPage = (event:React.ChangeEvent<HTMLSelectElement>) => {\n    setItemsPerPage(+event.target.value);\n    setSelectedPage(1);\n  };\n\n  const firstItemOnThePage = ((selectedPage - 1) * itemsPerPage) + 1;\n  const lastItemOnPage = selectedPage * itemsPerPage < TOTAL_ITEMS\n    ? selectedPage * itemsPerPage\n    : TOTAL_ITEMS;\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${selectedPage} (items ${firstItemOnThePage} - ${lastItemOnPage} of ${TOTAL_ITEMS})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handleItemsPerPage}\n            value={itemsPerPage.toString()}\n          >\n            {options.map((option) => (\n              <option key={option} value={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={TOTAL_ITEMS}\n        perPage={itemsPerPage}\n        currentPage={selectedPage}\n        onPageChange={setSelectedPage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}